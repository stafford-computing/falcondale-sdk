[project]
name = "falcondale"
description = "Falcondale SDK"
authors = [
    {name = "Stafford Computing LLC", email = "info@staffordcomputing.com"},
]
dependencies = [
    "pandas>=2.0.3",
    "ydata-profiling>=4.5.1",
    "scikit-learn>=1.3.0",
    "ipywidgets>=8.1.1",
    "torch>=2.0.1",
    "pennylane>=0.33.0",
    "qiskit>=0.45.0",
    "qiskit-machine-learning>=0.7.0",
    "qiskit-aer>=0.13.0",
    "dimod>=0.12.12",
    "dwave-neal>=0.6.0",
    "dwave-cloud-client>=0.10.6",
    "requests[socks]>=2.31.0",
    "qiskit-optimization>=0.6.0",
    "qiskit-algorithms>=0.2.1",
    "apqc>=0.1.3",
    "simulated-bifurcation>=1.2.0",
]
requires-python = ">=3.10,<3.12"
readme = "README.md"
license = {text = "MIT"}
dynamic = ["version"]

[project.urls]
"Homepage" = "https://github.com/stafford-computing/falcondale-sdk"
"Documentation" = "https://falcondale.readthedocs.io/"

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.pdm.version]
source = "file"
path = "falcondale/__init__.py"

[tool.pdm.dev-dependencies]
notebook = [
    "ipykernel>=6.23.3",
]
documentation = [
    "mkdocs>=1.5.2",
    "mkdocs-material>=9.3.1",
    "mkdocs-badges>=0.4.1",
    "mkdocstrings[crystal,python]>=0.23.0",
    "mkdocs-jupyter>=0.24.2",
]
dev = [
    "pre-commit>=3.6.0",
    "ruff>=0.1.8",
    "tox-pdm>=0.7.0",
]

[tool.ruff]
include = ["pyproject.toml", "falcondale/**/*.py", "scripts/**/*.py"]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "assets",
    "build",
    "dist",
    "docs",
]

# Same as Black.
line-length = 120
indent-width = 4

# Assume Python 3.8
target-version = "py310"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
